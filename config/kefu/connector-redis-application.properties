# ======================= spring boot configuration ===============
# connector 上启动的web服务的端口号
server.port=8686
spring.aop.auto=true
spring.aop.proxy-target-class=true
# management configuration
management.security.enabled=true
management.context-path=/management
#security configuration
security.user.name=kefu-admin
security.user.password=593d9dc725c8caf8a21e6f12337d3271
security.user.role=ADMIN
security.basic.path=/management
# ======================= database configuration ==================
# 数据库连接信息, 同一个部署应该都是一样的
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/weichat?useUnicode=true&characterEncoding=utf8&autoReconnect=true&rewriteBatchedStatements=TRUE&useSSL=false
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.max-active=100
spring.datasource.maximum-pool-size=200
spring.datasource.initial-size=50

# ======================= hibernate configuration ================
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.DefaultNamingStrategy
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.show_sql=false
# cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.cache.infinispan.use_synchronization=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.infinispan.InfinispanRegionFactory
spring.jpa.properties.hibernate.cache.infinispan.cfg=infinispan.xml
spring.jpa.properties.hibernate.generate_statistics=false
# ======================= redis configuration =====================
# 因为现在都是连本机的redis, 这个应该不需要修改, 同时保证每个kefu的机器上都有一个redis在监听 127.0.0.1
spring.redis.host=127.0.0.1
spring.redis.password=
spring.redis.port=6379
spring.redis.pool.max-idle=200
spring.redis.pool.min-idle=10
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.pool.max-total=5000
spring.redis.timeout= 2000

kf.inmessage.redis.enable=true
kf.inmessage.redis.host=${spring.redis.host}
kf.inmessage.redis.port=6385
kf.inmessage.redis.timeout=${spring.redis.timeout}
kf.inmessage.redis.pool.max-idle=${spring.redis.pool.max-idle}
kf.inmessage.redis.pool.min-idle=${spring.redis.pool.min-idle}
kf.inmessage.redis.pool.max-wait=${spring.redis.pool.max-wait}
kf.inmessage.redis.pool.max-total=${spring.redis.pool.max-total}

# ======================= thrift server configuration =============
#thrift server 启动的ip地址, 因为现在web和connector(thrift server是connector启动的)是一对一, 部署在同一个机器上的
#所以这个也不需要修改
weichat.thrift.server.host=127.0.0.1
#thrift server 启动的端口号
weichat.thrift.server.port=9813

# ======================= ganglia report ==========================
# metrics report 到ganglia的地址和端口, 留空的话则不会report到ganglia
# 等于之前的  -Dreporter.ganglia.host=sdb-ali-hangzhou-log -Dreporter.ganglia.port=8684
reporter.ganglia.host=
# 注意, 这个属性需要或者不存在或者给一个数字的值, 不能留空
reporter.ganglia.port=8649

#============== connector ====
# connector 是否应该延迟启动关联, 等于之前的-DlazyLoadChannel=true, 沙箱5上配置的是true
weichat.connector.lazy_load_channel=false

# xmpp connection ping interval
weichat.connector.ping_interval=180

# connector 是否是从kafka上读取消息,如果为true，则不依赖于xmpp连接
weichat.connector.use_kafka_agent=false
redis.message.consumer.topic=kf:conn:inmessages

# ======================= kafka server configuration =============zk集群时，用逗号分隔
weichat.kafka.zookeeper.connect=localhost:2181
weichat.kafka.group.id=kefumsg
weichat.kafka.zookeeper.session.timeout.ms=4000
weichat.kafka.zookeeper.sync.time.ms=200
weichat.kafka.auto.commit.interval.ms=1000
weichat.kafka.auto.offset.reset=smallest
weichat.kafka.serializer.class=kafka.serializer.StringEncoder
weichat.kafka.consume.topic=ejabberd-chat-messages
weichat.kafka.consume.topic.partitionCount=10

# ======================= thrift server with use kafka configuration =============
#thrift server 启动的ip地址, 使用kafka读取客服消息时，需要在每一个kafka集群上启动一个consumer及对应的thriftserver供客服系统调用，不是kafka读取模式不需要特意设置
#对应在beijing集群上启动kafka consumer及其thriftserver的ip,该IP需要为公网IP
weichat.thrift.server.beijing.host=127.0.0.1
#thrift server 启动的端口号
weichat.thrift.server.beijing.port=9813
#对应在vip1集群上启动kafka consumer及其thriftserver的ip,该IP需要为公网IP
weichat.thrift.server.vip1.host=127.0.0.1
#thrift server 启动的端口号
weichat.thrift.server.vip1.port=9814


#最大的允许的线程数, 超出这个数字之后, /health会返回错误
#不能小于10, 默认为3000
kefu.server.thread.max=11

## ============================ kefu kafka (not the one used for connector)==============
kefu.kafka.producer.enabled=true
kefu.kafka.producer.properties.bootstrap.servers=127.0.0.1:9092
#kefu.kafka.consumer.enabled=true
#kefu.kafka.consumer.properties.zookeeper.connect=127.0.0.1:2181
#kefu.kafka.consumer.properties.group.id=kefu-webapp
#kefu.kafka.consumer.properties.client.id=${kefu.kafka.consumer.properties.group.id}-client-${random.int}
#kefu.kafka.consumer.properties.bootstrap.servers=${kefu.kafka.producer.properties.bootstrap.servers}
kefu.kafka.bridge=true
kefu.kafka.topic=events
kefu.message.mq.provider=redis

##message expire time, in millis. 5*24*3600*1000
weichat.connector.message.expire.ms=432000000
